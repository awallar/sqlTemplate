   DECLARE
        TYPE CurTyp IS REF CURSOR;
        cv   CurTyp;
        srcInterfaceStmnt VARCHAR2(200);
        serviceRequestStmnt VARCHAR2(200);
        cercInstStmnt VARCHAR2(200);

        interfaceID  VARCHAR2(200);
        interfaceName  VARCHAR2(200);
        routingInstID  VARCHAR2(200);

        cerInstTmp CERC_INSTANCES%ROWTYPE;

        BEGIN
        srcInterfaceStmnt := 'SELECT i.id, i.name FROM INTERFACES i, ROUTERS r WHERE i.name=:1 AND r.name=:2';
        serviceRequestStmnt := 'SELECT sr.routing_instance_id FROM SERVICE_REQUESTS sr WHERE sr.pe_interface_id=:1';
        cercInstStmnt := 'SELECT * FROM CERC_INSTANCES ci WHERE ci.routing_instance_id=:1';

        -- search for ID in INTERFACES for a given interface name and router name

                OPEN cv for srcInterfaceStmnt USING '$pe_interface_dummy', '$dummy_router_name' ;
        LOOP
        FETCH cv INTO interfaceID, interfaceName;
        DBMS_OUTPUT.PUT_LINE(interfaceID);
        DBMS_OUTPUT.PUT_LINE(interfaceName);
        EXIT WHEN cv%NOTFOUND;
        END LOOP;
        CLOSE cv;

        -- search for routing_instance_id in SERVICE_REQUESTS using INTERFACE ID previously grabbed
        OPEN cv for serviceRequestStmnt USING interfaceID ;
        LOOP
        FETCH cv INTO routingInstID;
        DBMS_OUTPUT.PUT_LINE(routingInstID);
        EXIT WHEN cv%NOTFOUND;
        END LOOP;
        CLOSE cv;

        -- search for cerc_instance rows in CERC_INSTANCES using ROUTING_INSTANCE ID previously grabbed
        OPEN cv for cercInstStmnt USING routingInstID ;
        LOOP
        FETCH cv INTO cerInstTmp;
        DBMS_OUTPUT.PUT_LINE(cerInstTmp.ID);
        EXIT WHEN cv%NOTFOUND;
        END LOOP;
        CLOSE cv;

        END;